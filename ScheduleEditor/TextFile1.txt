// 時間を表示する (0:00-1:00)的な
// クラスをidに直す

// 何回も呼び出すようなセレクタは、変数にキャッシュする

// リサイズしたら、テーブルの要素を作成しなおせば良いかな

// 右クリックでメニュー出して追加・削除
// タスクをクリックすると吹き出しが出て、編集できる

// tasktypeのセレクターの各項目に色を付ける

// 吹き出しの「時間」のとこの表示を下ぞろえに
// タスクの上のボーダー出てなくない？
// add a memo area to the task editor
// タスクのタイトル部分の下にアンダーライン的なの引くと良いかも
// 外枠をクリックすると、タスクをクリックしても反応しなくなるバグ

// タスクの吹き出しは上にあるといいかも
// taskを追加するときは、あらかじめhtmlにサンプルを書いておいて、それをcloneしたほうがいいかも

// 現在のスケジュールをjsonで出力したり読み込んだり出来る機能
// そいつを使ってアンドゥ機能を実装
// 削除を下寄せにする 1.5時間も修正されてないくさい

// mousedownでactivate, mouseupでeditorをshow
// editorはアクティブなタスクにひっついてこない
// グリッド上で移動中はエディタを出さない

// ドラッグしてから枠外をクリックしても非アクティブ化が解除されない

// 色合いを調節する
// task.type0, .type1, ...はループで処理する
// activeになったら、背景・前景色を反転

// task-grid-cellとhourをselectableにすべきかも。
// そのために、hour-areaをtask-gridの層に、ついでにclass→idへの移行

// 表示がずれてる、注意 (mspaintでドット単位で確認)

// セレクトボックスがバグってる
// 上にあるタスクを下に持っていこうとすると、下のタスクがぶっ飛ぶ (タスクを3つつくる、1番上の高さは1にする、1番上のタスクを下に持っていく、一番下のタスクがぶっとぶ)

// hourとgrid-cellを1つずつまとめたdivを作って、そのdivをselectableにする
// grid-cell → (hour-cell + task-cell)という構成にする

// task-gridをCSSで完全にtableにする (display: table-rowなどを組み合わせて)
// 表示が崩れてる

// chrome でdisplay: table-cellとbox-sizing: border-box;がうまく働かない
// floatは使わない。崩れる。もしくは、外のブロックの幅を固定。

// 微妙にズレがある
// 新規作成でタスク作るとボーダーがかぶる、dragすると戻る
// 一番上のグリッドが太い
// なんか7.5から時間が始まってる

// 色味を考える前に、jsonデータの読み込み・書き込み・キャンセル機能を実装した方がよさそう

// ものすごい勢いで弄ってると、heightが0になるやつが居る

// $.fn.position()の呼び出しが高コスト、offset()じゃダメか、css("top")じゃダメか、top()の呼び出しを減らせないか検討
// sortも高コスト

// pull-right, pull-leftも出来るだけcssで指定する方がいいかな

// top, height操作した時に、時間の表示も更新しないとダメなの、忘れそう

// 送信ボタン・クリアボタンは必要か
// ブラウザバックでアンドゥ・リドゥ

// IEでplaceholderの調子がおかしい (特に、ロード後)
// 高さ1の時にバツマークが押しにくい

// コードを整理して、最終的にTypeScriptに移植

// 左側に予定表・右側に実働表を表示できるように
// パフォーマンスを測定 プロファイル
// テーブルでレイアウトした方が綺麗かもしれんね

// 1日の総計 (何時間何をした)をどっかに表示

// TypeScriptに書き直す、ソースを全体的に整理

// AutoCompleteで入力した時に、グリッドに反映されない
// firefoxでballoonが消えても、autocompleteが消えない
// 最初からタスク名にフォーカスがあると、autocomplteがうざい

// DOMオブジェクトにIDを割り当てて、それを元にTaskElementを呼び出す

// タスクが横に動くようになった → restoreすると、taskWidthがゼロになっている
// ドラッグがおかしなことになっている → 既にあるtaskの中にタスクを作って、1つのタスクが2つのタスクが分断されると、そいつらがイベントを共有する
// →deep copyでイベントまでコピーされちゃってるっぽい

// タスクのmemo欄に改行が反映されない

// やっぱTask用のコンテナが必要かも

// TaskElementContainerがBalloonを持っていることにする

// クラスの依存関係を少なくする → ObserverPatternを使う

// タスクの追加の挙動が怪しい

// balloonにTaskElementContainer渡さない、TaskElementをshowとupdateで渡す

// adjustメソッドはもっとラクに(1段ループで、たとえばタスクが下方向に伸びたら、下にあるタスクを順番に見て行ってずらすとか)

// TaskElementContainerにAddAll的なメソッド追加して、DocumentFragmentを使って高速化

// "use strict"; みたいにコロン入れる
// テーブルはスクロールバーが出るように。ウィンドウの高さに合わせて内容変えるのどうするんだろ。

// タスクの右側に白い線が入ってるの

// task-tableのscrollTopは、coretimeの頭に
// tableレイアウトに戻そうかどうしようか
// スケジュールの分割数(15分おき、30分おき)... schedule-fineness

// ドラッグ(draggable)しながらスクロールして要素が外に行くと消えるときがある
// ドラッグが終わったときに、task-listのDOM要素の中にtaskElementが存在していない場合、こっち側で入れてあげて、top,height設定してshowすべきかも

// Javascript標準のDateTimeを使うことにする → jsonにできない。やはり自分で書いた方がいい

// TaskElement作るときに最初にTimeSpan渡す必要なくない

// tableもクラスに分けるか……

// スクリプトに渡すデータは、scriptタグに独立して書く

// タスクの入れ替えが出来るように、bootstrapのbuttongroupでメニュー

// coretime変数,schedulefineness変数を入れておくクラスはどうしよう
// configをJSONパーズしたデータは一か所にあった方がいい

// Time, TimeSpanは純粋に時間だけを管理する。テーブルの何行目というのを示す値は、TaskElementとTableだけが感知する
// HTML的に、テーブルは縦方向で要素をまとめたい。(予定/時間/実施)

// TaskElementContainerがcreateメソッドでTaskElement作るようにする
// ブランチを分けよう
// knockout.jsで書き直せないかな

// Timeにindex関係のメソッドを持っているのは正直きもい
// コンストラクタにpublic...で指定するのはやめて、出来るだけプロパティでラップする

// balloon表示中はselectableをdisableにすべきかも

// balloonのセレクトボックスが腐ってる